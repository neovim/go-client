name: Benchmark

on:
  push:
    branches:
      - "benchmark/*"
  pull_request:
    branches:
      - "benchmark/*"

defaults:
  run:
    shell: bash

jobs:
  benchmark:
    strategy:
      matrix:
        os:
          - ubuntu-20.04  # https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md
        go-version:
          - 1.17.x
    runs-on: ${{ matrix.os }}

    steps:
    - name: Set flag environment variable
      run: |
        echo "OS=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "GO_VERSION=$(echo ${{ matrix.go-version }} | cut -d. -f-2)" >> $GITHUB_ENV

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cache Go module and build cache
      uses: actions/cache@v2
      with:
        key: ${{ env.OS }}-go-${{ hashFiles('**/go.sum') }}
        path: |
          ~/go/pkg/mod              # Module download cache
          ~/.cache/go-build         # Build cache (Linux)
        restore-keys: |
          ${{ env.OS }}-go-

    - name: Cache nvim binary for linux and darwin
      uses: actions/cache@v2
      id: cache-nvim
      with:
        key: ${{ env.OS }}-nvim-${{ hashFiles('~/nvim/bin/nvim') }}
        path: |
          ~/nvim
        restore-keys: |
          ${{ env.OS }}-nvim-

    - name: Install nvim binary
      uses: rhysd/action-setup-vim@v1
      if: steps.cache-nvim.outputs.cache-hit != 'true'
      with:
        neovim: true
        version: v0.5.0

    - name: Run Benchmark
      run: |
        go test -v -count=3 -run=none -bench=. -benchmem -timeout=15m ./... | tee bench-${{ env.OS }}-${{ env.GO_VERSION }}.txt

    - name: 'Upload benchmark Artifact'
      uses: actions/upload-artifact@v2
      with:
        name: bench-${{ env.OS }}-${{ env.GO_VERSION }}.txt
        path: bench-${{ env.OS }}-${{ env.GO_VERSION }}.txt
