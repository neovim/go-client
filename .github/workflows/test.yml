name: Test

on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published
      - created
      - edited

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      matrix:
        os:
          - ubuntu-24.04  # https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md
          - macos-15      # https://github.com/actions/runner-images/blob/main/images/macos/macos-15-Readme.md
          - windows-2025  # https://github.com/actions/runner-images/blob/main/images/windows/Windows2025-Readme.md
        go-version:
          - 1.22.x
          - 1.23.x
          - 1.24.x
        neovim-version:
          - v0.9.1
          - v0.10.4
          - v0.11.0
          - nightly
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - name: Set flag environment variable
      run: |
        echo "OS=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "GO_VERSION=$(echo ${{ matrix.go-version }} | cut -d. -f-2)" >> $GITHUB_ENV
        echo "NVIM_VERSION=$(if [ ${{ matrix.neovim-version }} != 'nightly' ]; then echo 'stable'; else echo 'nightly'; fi)" >> $GITHUB_ENV

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install neovim binary
      uses: rhysd/action-setup-vim@v1
      with:
        neovim: true
        version: ${{ matrix.neovim-version }}

    - name: Test and take a coverage
      run: |
        go test -race -count=1 -covermode=atomic -coverpkg=./... -coverprofile=coverage.out ./...

    - uses: codecov/codecov-action@v5
      with:
        files: coverage.out
        flags: ${{ env.OS }}-${{ env.GO_VERSION }}-${{ env.NVIM_VERSION }}
        env_vars: OS,GO_VERSION,NVIM_VERSION
